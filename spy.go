// Package procspy lists TCP connections, and optionally tries to find the
// owning processes.
// Works on Linux (via /proc) and Darwin (via `lsof -i` and `netstat`).
// You'll need root to use Processes().
package procspy

import (
	"net"
)

// Connection is a (TCP) connection.
type Connection struct {
	Transport     string
	LocalAddress  net.IP
	LocalPort     uint16
	RemoteAddress net.IP
	RemotePort    uint16
	inode         uint64
}

// ConnectionProc is a single connection with PID/process name.
type ConnectionProc struct {
	Connection
	PID  uint
	Name string
}

// Connections returns all established (TCP) connections.
// No need to be root to run this.
func Connections() ([]Connection, error) {
	return cbConnections()
}

// Processes gets the list generated by Connections, and tries to find the
// process which handles the connection.
// Only connections for which we found a process are returned.
// You need to be root to find all processes.
func Processes(c []Connection) ([]ConnectionProc, error) {
	return cbProcesses(c)
}
